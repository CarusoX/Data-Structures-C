#define at(x, p)            x->at(x, p)
#define check(x)            x->check(x)
#define clear(x)            x->clear(x)
#define copy(x)             x->copy(x)
#define destroy(x)          x->destroy(x)
#define equals(x, y)        x->equals(x, y)
#define erase(x, y)         x->erase(x, T_init(x->type, &y))   
#define find(x, y)          x->find(x, &y)
#define fore(i, s, e)       for(int i = s; i < e; i++)
#define get_first(x)        x->get_first(x)
#define get_second(x)       x->get_second(x)
#define greater_than(x, y)  x->greater_than(x, y)
#define insert(x, y)        x->insert(x, T_init(x->type, &y))
#define less_than(x, y)     x->less_than(x, y)
#define pop_back(x)         x->pop_back(x)
#define pop(x)              x->pop(x)
#define push_back(x, y)     x->push_back(x, T_init(x->type, &y))
#define push(x, y)          x->push(x, T_init(x->type, &y))
#define set_at(x, y, z)     x->set_at(x, y, z)
#define set_first(x, y)     x->set_first(x, &y)
#define set_second(x, y)    x->set_second(x, &y)
#define set_type(x, t)      x->set_type(x, t)
#define set_value(x, v)     x->set_value(x, v)
#define set(x, y, z)        x->set(x, &y, &z)
#define size(x)             x->size(x)
#define stype(x)            x->stype(x)
#define top(x)              x->top(x)